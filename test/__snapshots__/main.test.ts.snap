// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CollectionTableB2CF3263": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "itemType",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "title",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "itemType",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "title",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "collections-ex",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "CollectionsApiKey25E0AE3D": Object {
      "Properties": Object {
        "Enabled": true,
        "Name": "CollectionsApiKey",
        "Value": "6230314823798cf51af4121cf1caf4f4",
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "CollectionsGateway39DAD60B": Object {
      "Properties": Object {
        "Name": "collections-ex",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "CollectionsGatewayAccountB7F867C6": Object {
      "DependsOn": Array [
        "CollectionsGateway39DAD60B",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "CollectionsGatewayCloudWatchRole387B76F3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "CollectionsGatewayCloudWatchRole387B76F3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CollectionsGatewayCollectionsErrorModelD1FF6616": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Name": "ErrorModel",
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "errorResponse",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "CollectionsGatewayCollectionsResponseModelBF2A10B4": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Name": "ResponseModel",
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "pollResponse",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "CollectionsGatewaycollectionsDB662D18": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "CollectionsGateway39DAD60B",
            "RootResourceId",
          ],
        },
        "PathPart": "collections",
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "CollectionsGatewaycollectionsbook76548203": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "CollectionsGatewaycollectionsDB662D18",
        },
        "PathPart": "book",
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "CollectionsGatewaycollectionsbookPOSTBE886C79": Object {
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "ResponseTemplates": Object {
                "application/json": "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))
{
  \\"exception\\": \\"$errorMessageObj.exception\\",
  \\"message\\": \\"$errorMessageObj.message\\"
}",
              },
              "SelectionPattern": ".*\\"code\\":400.*",
              "StatusCode": "400",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{
  \\"item\\": \\"book\\",
  \\"title\\": $input.json('$.title'),
  \\"author\\": $input.json('$.author'),
  \\"ISBN\\": $input.json('$.ISBN')
}",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "InsertItem285D27A6",
                    "Arn",
                  ],
                },
                ":\${stageVariables.lambdaAlias}/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "CollectionsGatewayCollectionsResponseModelBF2A10B4",
              },
            },
            "StatusCode": "200",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "CollectionsGatewayCollectionsErrorModelD1FF6616",
              },
            },
            "StatusCode": "400",
          },
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "CollectionsGatewayCollectionsErrorModelD1FF6616",
              },
            },
            "StatusCode": "404",
          },
        ],
        "ResourceId": Object {
          "Ref": "CollectionsGatewaycollectionsbook76548203",
        },
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "CollectionsGatewaycollectionsbookPOSTCollectionsPermission7F50CF96": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Ref": "InsertItemAliasDD746C18",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "CollectionsGateway39DAD60B",
              },
              "/",
              Object {
                "Ref": "Stage0E8C2AF5",
              },
              "/POST/collections/book",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Deployment37BBD5E4544ceabe9f41281617865980e32a689c": Object {
      "DependsOn": Array [
        "CollectionsGatewaycollectionsbookPOSTBE886C79",
      ],
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "InsertItem285D27A6": Object {
      "DependsOn": Array [
        "InsertItemServiceRoleDefaultPolicy734CE276",
        "InsertItemServiceRoleB4E0F2EF",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "16e26295c60bfbf787eb7031e23f6cd8edce3404ad30e692e05bf0cca39c17fc.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TABLE_NAME": Object {
              "Ref": "CollectionTableB2CF3263",
            },
          },
        },
        "FunctionName": "collection-insert-ex",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "InsertItemServiceRoleB4E0F2EF",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "InsertItemAliasDD746C18": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "InsertItem285D27A6",
        },
        "FunctionVersion": Object {
          "Fn::GetAtt": Array [
            "InsertItemCurrentVersionD5DEEC582b4764774112d7939882d8044fc2ab22",
            "Version",
          ],
        },
        "Name": "dev",
      },
      "Type": "AWS::Lambda::Alias",
    },
    "InsertItemCurrentVersionD5DEEC582b4764774112d7939882d8044fc2ab22": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "InsertItem285D27A6",
        },
      },
      "Type": "AWS::Lambda::Version",
      "UpdateReplacePolicy": "Retain",
    },
    "InsertItemServiceRoleB4E0F2EF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InsertItemServiceRoleDefaultPolicy734CE276": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CollectionTableB2CF3263",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InsertItemServiceRoleDefaultPolicy734CE276",
        "Roles": Array [
          Object {
            "Ref": "InsertItemServiceRoleB4E0F2EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Stage0E8C2AF5": Object {
      "DependsOn": Array [
        "CollectionsGatewayAccountB7F867C6",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "Deployment37BBD5E4544ceabe9f41281617865980e32a689c",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "ERROR",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "CollectionsGateway39DAD60B",
        },
        "StageName": "dev",
        "TracingEnabled": true,
        "Variables": Object {
          "lambdaAlias": "dev",
        },
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "UsagePlanC18B28F1": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "CollectionsGateway39DAD60B",
            },
            "Stage": Object {
              "Ref": "Stage0E8C2AF5",
            },
            "Throttle": Object {},
          },
        ],
        "UsagePlanName": "CollectionsUsagePlan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "UsagePlanUsagePlanKeyResourcetestCollectionsApiKeyC34C8052BC4C2FB8": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "CollectionsApiKey25E0AE3D",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "UsagePlanC18B28F1",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
